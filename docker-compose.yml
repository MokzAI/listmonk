services:
  listmonk:
    image: 'listmonk/listmonk:latest'
    command: './listmonk --static-dir=/listmonk/static'
    environment:
      - SERVICE_FQDN_LISTMONK_9000
      - 'LISTMONK_app__address=0.0.0.0:9000'
      - LISTMONK_db__host=postgres
      - LISTMONK_db__name=listmonk
      - LISTMONK_db__user=$SERVICE_USER_POSTGRES
      - LISTMONK_db__password=$SERVICE_PASSWORD_POSTGRES
      - LISTMONK_db__port=5432
      - TZ=Etc/UTC
    volumes:
      - 'listmonk-data:/listmonk/uploads'
      - './static/email-templates:/listmonk/static/email-templates'
      - './static/public:/listmonk/static/public'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - wget
        - '-q'
        - '--spider'
        - 'http://127.0.0.1:9000'
      interval: 5s
      timeout: 20s
      retries: 10
    labels:
      - 'traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS'
      - 'traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=http://localhost:3000,https://mokz.ai,https://*.mokz.ai'
      - 'traefik.http.middlewares.cors.headers.accesscontrolallowheaders=Content-Type,Authorization'
      - traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true
      - traefik.http.middlewares.cors.headers.accesscontrolmaxage=100
      - traefik.http.routers.listmonk.middlewares=cors@docker
  listmonk-initial-database-setup:
    image: 'listmonk/listmonk:latest'
    command: './listmonk --install --yes --idempotent'
    restart: 'no'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - LISTMONK_db__host=postgres
      - LISTMONK_db__name=listmonk
      - LISTMONK_db__user=$SERVICE_USER_POSTGRES
      - LISTMONK_db__password=$SERVICE_PASSWORD_POSTGRES
      - LISTMONK_db__port=5432
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=listmonk
      - POSTGRES_PASSWORD=$SERVICE_PASSWORD_POSTGRES
      - POSTGRES_USER=$SERVICE_USER_POSTGRES
    volumes:
      - 'pg-data:/var/lib/postgresql/data'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
      interval: 5s
      timeout: 20s
      retries: 10